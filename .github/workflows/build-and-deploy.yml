# This workflow trigger on push to any branch
name: CI / CD
on:
    push:
        paths-ignore:
            - '**.md'
            - '.gitignore'
            - 'LICENCE'
            - 'CODEOWNERS'
        branches:
    deployment:

jobs:
    test:
        name: Test Code
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [8.x]

        steps:
            - uses: actions/checkout@v1
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}
            - name: npm install, build, and test
              run: |
                  npm ci
                  npm run test

    build-code-and-push-docker-dev:
        name: staging-build-push-docker
        if: startsWith(github.ref, 'refs/heads/dev-') || startsWith(github.ref, 'refs/heads/master') || (github.event.deployment.environment == 'dev-sbs' && github.event.deployment.ref == 'master') # Build and push docker if publish staging event from sanity studio
        needs: test
        runs-on: ubuntu-latest
        steps:
            - name: debug deployment webhook
              run: |
                  echo "ref - ${{ github.event.deployment.ref }}"
                  echo "task - ${{ github.event.deployment.task }}"
                  echo "environment - ${{ github.event.deployment.environment }}"
            - name: Checkout code
              uses: actions/checkout@v1
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}
            - name: build code
              env:
                  SANITY_TOKEN: ${{ secrets.SANITY_TOKEN }}
                  DATASET: production
                  ENV: dev
                  OVERLAY_DRAFTS: true
                  WATCH_MODE: true
              run: |
                  echo "Exported DATASET=$DATASET"
                  npm i
                  npm run build
            - name: Create Docker tag
              env:
                  NAME: sykdom-i-familien
              run: |
                  echo "docker.pkg.github.com"/"$GITHUB_REPOSITORY"/"$NAME" > .docker_image
                  echo "$(date "+%Y.%m.%d.%H.%M")-$(git rev-parse --short HEAD)" > .docker_tag
            - name: Build Docker image
              run: |
                  docker build -t $(cat .docker_image):$(cat .docker_tag) . -f Dockerfile-dev
            - name: Login to Github Package Registry
              env:
                  DOCKER_USERNAME: x-access-token
                  DOCKER_PASSWORD: ${{ secrets.GITHUB_ACCESS_TOKEN }}
              run: |
                  echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USERNAME" --password-stdin docker.pkg.github.com
            - name: Push Docker image
              run: 'docker push $(cat .docker_image):$(cat .docker_tag)'
            - name: pass image file to next job.
              uses: actions/upload-artifact@v1
              with:
                  name: docker_image
                  path: .docker_image
            - name: pass tag file to next job.
              uses: actions/upload-artifact@v1
              with:
                  name: docker_tag
                  path: .docker_tag

    build-code-and-push-docker-prod:
        name: prod-build-push-docker
        if: github.event.deployment.environment == 'prod-sbs' && github.event.deployment.ref == 'master' # Build and push docker if publish production event from sanity studio
        needs: test
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v1
            - name: Checkout code
              uses: actions/checkout@v1
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}
            - name: build code
              env:
                  SANITY_TOKEN: ${{ secrets.SANITY_TOKEN }}
                  DATASET: production
                  ENV: prod
                  OVERLAY_DRAFTS: false
                  WATCH_MODE: false
              run: |
                  echo "Exported DATASET=$DATASET"
                  npm i
                  npm run build
            - name: Create Docker tag
              env:
                  NAME: sykdom-i-familien
              run: |
                  echo "docker.pkg.github.com"/"$GITHUB_REPOSITORY"/"$NAME" > .docker_image
                  echo "$(date "+%Y.%m.%d.%H.%M")-$(git rev-parse --short HEAD)" > .docker_tag
            - name: Build Docker image
              run: |
                  docker build -t $(cat .docker_image):$(cat .docker_tag) .
            - name: Login to Github Package Registry
              env:
                  DOCKER_USERNAME: x-access-token
                  DOCKER_PASSWORD: ${{ secrets.GITHUB_ACCESS_TOKEN }}
              run: |
                  echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USERNAME" --password-stdin docker.pkg.github.com
            - name: Push Docker image
              run: 'docker push $(cat .docker_image):$(cat .docker_tag)'
            - name: pass image file to next job.
              uses: actions/upload-artifact@v1
              with:
                  name: docker_image
                  path: .docker_image
            - name: pass tag file to next job.
              uses: actions/upload-artifact@v1
              with:
                  name: docker_tag
                  path: .docker_tag

    deploy-dev-sbs:
        name: deploy-dev-sbs
        needs: build-code-and-push-docker-dev # Depends on build-code-and-push-docker job
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v1
              # Download the image and tag file to use for the deployment cli.
            - name: Download image file
              uses: actions/download-artifact@v1
              with:
                  name: docker_image
            - name: Download tag file
              uses: actions/download-artifact@v1
              with:
                  name: docker_tag
            - name: unpack
              run: |
                  cp docker_image/.docker_image .
                  cp docker_tag/.docker_tag .
            - name: deploy to dev-sbs
              uses: navikt/deployment-cli/action@0.4.0
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  cluster: dev-sbs
                  team: dusseldorf
                  resources: nais/dev-sbs.yml

    deploy-prod-sbs:
        name: deploy-prod-sbs
        needs: build-code-and-push-docker-prod # Depends on build-code-and-push-docker job
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v1
              # Download the image and tag file to use for the deployment cli.
            - name: Download image file
              uses: actions/download-artifact@v1
              with:
                  name: docker_image
            - name: Download tag file
              uses: actions/download-artifact@v1
              with:
                  name: docker_tag
            - name: unpack
              run: |
                  cp docker_image/.docker_image .
                  cp docker_tag/.docker_tag .
            - name: deploy to prod-sbs
              uses: navikt/deployment-cli/action@0.4.0
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  cluster: prod-sbs
                  team: dusseldorf
                  resources: nais/prod-sbs.yml
